{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-weekend\\\\Labs\\\\lab09\\\\src\\\\pages\\\\PostsPage.js\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchPosts } from '../actions/postsActions';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostsPage = _ref => {\n  _s();\n  let {\n    dispatch,\n    posts,\n    loading,\n    hasErrors\n  } = _ref;\n  // 리덕스와 connect된 리액트 컴포넌트는 dispatch 함수를 props로 전달받음.\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [dispatch]);\n\n  // 로딩중, 에러, 또는 응답 성공(포스트 목록) 보여주기\n  const renderPosts = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n    if (hasErrors) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some errors...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    return posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 32\n    }, this));\n  };\n\n  // 화면 렌더링\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD3EC\\uC2A4\\uD2B8 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), renderPosts()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// 리덕스 스토어가 관리하는 state를 전달받아서 페이지 컴포넌트의 props로 전달될 객체를 리턴.\n_s(PostsPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PostsPage;\nconst mapStateToProps = state => ({\n  posts: state.posts.posts,\n  loading: state.posts.loading,\n  hasErrors: state.posts.hasErrors\n});\n\n// 리덕스와 리액트를 연결\nexport default connect(mapStateToProps)(PostsPage);\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");","map":{"version":3,"names":["Link","connect","useEffect","fetchPosts","Post","jsxDEV","_jsxDEV","PostsPage","_ref","_s","dispatch","posts","loading","hasErrors","renderPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","id","to","_c","mapStateToProps","state","$RefreshReg$"],"sources":["E:/react-weekend/Labs/lab09/src/pages/PostsPage.js"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchPosts } from '../actions/postsActions';\r\nimport Post from '../components/Post';\r\n\r\nconst PostsPage = ({ dispatch, posts, loading, hasErrors }) => {\r\n  // 리덕스와 connect된 리액트 컴포넌트는 dispatch 함수를 props로 전달받음.\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n  }, [dispatch]);\r\n\r\n  // 로딩중, 에러, 또는 응답 성공(포스트 목록) 보여주기\r\n  const renderPosts = () => {\r\n    if (loading) {\r\n      return <p>Loading...</p>;\r\n    }\r\n    if (hasErrors) {\r\n      return <p>Some errors...</p>;\r\n    }\r\n\r\n    return posts.map((post) => <Post key={post.id} post={post} />);\r\n  };\r\n\r\n  // 화면 렌더링\r\n  return (\r\n    <div>\r\n      <h1>포스트 목록</h1>\r\n      <Link to=\"/\">Dashboard</Link>\r\n      {renderPosts()}\r\n    </div>\r\n  );\r\n};\r\n\r\n// 리덕스 스토어가 관리하는 state를 전달받아서 페이지 컴포넌트의 props로 전달될 객체를 리턴.\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts.posts,\r\n  loading: state.posts.loading,\r\n  hasErrors: state.posts.hasErrors,\r\n});\r\n\r\n// 리덕스와 리액트를 연결\r\nexport default connect(mapStateToProps)(PostsPage);\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGC,IAAA,IAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAL,IAAA;EACxD;EACAN,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIF,OAAO,EAAE;MACX,oBAAON,OAAA;QAAAS,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC1B;IACA,IAAIN,SAAS,EAAE;MACb,oBAAOP,OAAA;QAAAS,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC9B;IAEA,OAAOR,KAAK,CAACS,GAAG,CAAEC,IAAI,iBAAKf,OAAA,CAACF,IAAI;MAAeiB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfb,OAAA,CAACN,IAAI;MAACuB,EAAE,EAAC,GAAG;MAAAR,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC5BL,WAAW,CAAC,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;;AAED;AAAAV,EAAA,CA5BMF,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AA6Bf,MAAMkB,eAAe,GAAIC,KAAK,KAAM;EAClCf,KAAK,EAAEe,KAAK,CAACf,KAAK,CAACA,KAAK;EACxBC,OAAO,EAAEc,KAAK,CAACf,KAAK,CAACC,OAAO;EAC5BC,SAAS,EAAEa,KAAK,CAACf,KAAK,CAACE;AACzB,CAAC,CAAC;;AAEF;AACA,eAAeZ,OAAO,CAACwB,eAAe,CAAC,CAAClB,SAAS,CAAC;AAAC,IAAAiB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}