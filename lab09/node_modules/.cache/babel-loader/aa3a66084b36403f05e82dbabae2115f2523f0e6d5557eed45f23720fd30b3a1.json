{"ast":null,"code":"import axios from 'axios';\n\n// action type 정의\nexport const GET_POSTS = 'GET_POSTS'; // 포스트 목록 요청(request) 중\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'; // 포스트 목록 응답 성공\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE'; // 포스트 목록 응답 에러\n\n// action creator: 액션 객체({type, payload})를 리턴하는 함수\nexport const getPosts = () => ({\n  type: GET_POSTS\n});\nexport const getPostsSuccess = posts => ({\n  type: GET_POSTS_SUCCESS,\n  payload: posts\n});\nexport const getPostsFailure = () => ({\n  type: GET_POSTS_FAILURE\n});\nexport const fetchPosts = () => {\n  // Thunk 미들웨어에서 사용될 async 함수를 리턴.\n  return async dispatch => {\n    // 목록 요청 중 액션을 스토어의 리듀서에 전달.\n    dispatch(getPosts());\n    try {\n      const response = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      const posts = response.data; // 포스트 목록 배열(JSON)\n\n      // 목록 요청 성공 액션을 데이터(payload)와 함께 스토어의 리듀서에 전달.\n      dispatch(getPostsSuccess(posts));\n    } catch (error) {\n      // 목록 요청 실패 액션을 스토어의 리듀서에 전달.\n      dispatch(getPostsFailure());\n    }\n  };\n};","map":{"version":3,"names":["axios","GET_POSTS","GET_POSTS_SUCCESS","GET_POSTS_FAILURE","getPosts","type","getPostsSuccess","posts","payload","getPostsFailure","fetchPosts","dispatch","response","get","data","error"],"sources":["E:/react-weekend/Labs/lab09/src/actions/postsActions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// action type 정의\r\nexport const GET_POSTS = 'GET_POSTS'; // 포스트 목록 요청(request) 중\r\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'; // 포스트 목록 응답 성공\r\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE'; // 포스트 목록 응답 에러\r\n\r\n// action creator: 액션 객체({type, payload})를 리턴하는 함수\r\nexport const getPosts = () => ({\r\n  type: GET_POSTS,\r\n});\r\n\r\nexport const getPostsSuccess = (posts) => ({\r\n  type: GET_POSTS_SUCCESS,\r\n  payload: posts,\r\n});\r\n\r\nexport const getPostsFailure = () => ({\r\n  type: GET_POSTS_FAILURE,\r\n});\r\n\r\nexport const fetchPosts = () => {\r\n  // Thunk 미들웨어에서 사용될 async 함수를 리턴.\r\n  return async (dispatch) => {\r\n    // 목록 요청 중 액션을 스토어의 리듀서에 전달.\r\n    dispatch(getPosts());\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        'https://jsonplaceholder.typicode.com/posts',\r\n      );\r\n      const posts = response.data; // 포스트 목록 배열(JSON)\r\n\r\n      // 목록 요청 성공 액션을 데이터(payload)와 함께 스토어의 리듀서에 전달.\r\n      dispatch(getPostsSuccess(posts));\r\n    } catch (error) {\r\n      // 목록 요청 실패 액션을 스토어의 리듀서에 전달.\r\n      dispatch(getPostsFailure());\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,SAAS,GAAG,WAAW,CAAC,CAAC;AACtC,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB,CAAC,CAAC;AACtD,OAAO,MAAMC,iBAAiB,GAAG,mBAAmB,CAAC,CAAC;;AAEtD;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,MAAO;EAC7BC,IAAI,EAAEJ;AACR,CAAC,CAAC;AAEF,OAAO,MAAMK,eAAe,GAAIC,KAAK,KAAM;EACzCF,IAAI,EAAEH,iBAAiB;EACvBM,OAAO,EAAED;AACX,CAAC,CAAC;AAEF,OAAO,MAAME,eAAe,GAAGA,CAAA,MAAO;EACpCJ,IAAI,EAAEF;AACR,CAAC,CAAC;AAEF,OAAO,MAAMO,UAAU,GAAGA,CAAA,KAAM;EAC9B;EACA,OAAO,MAAOC,QAAQ,IAAK;IACzB;IACAA,QAAQ,CAACP,QAAQ,CAAC,CAAC,CAAC;IAEpB,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,4CACF,CAAC;MACD,MAAMN,KAAK,GAAGK,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAE7B;MACAH,QAAQ,CAACL,eAAe,CAACC,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACd;MACAJ,QAAQ,CAACF,eAAe,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}